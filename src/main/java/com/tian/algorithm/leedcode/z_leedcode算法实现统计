1 ：做过
1+：做过并觉得有难度系数


a1_两数之和                 11
a2_两数相加                 111
a3_无重复字符的最长子串       11111
a4_寻找两个正序数组的中位数   11     类似：a88_合并两个有序数组
a5_最长回文子串    1111
a6_Z字形变换     111111111
a7_整数反转     11
a8_字符串转换整数      11   a7/a8类似
a9_回文数              1
a10_正则表达式匹配     11111 1111

a11_盛最多水的容器     1    【 while(left<right) left++或right++ 】
a42_接雨水       11111

a23_合并K个升序链表    111
a39a40_组合总和       11111    任意组合         （是连续的）
    a39a40_组合总和  连续子组合 变形：从数组中找出和为指定值的连续子组合  111111

a46a47_全排列       11111

a53_最大子数组和     1                       （可能是不连续的）
    和最大的最长子数组 maxSumSubarray 11111

a55_跳跃游戏        11111
a56_合并区间        111111111
a57_插入区间        111111111
a58_最后一个单词的长度 11

a60_排列序列        111
a78a90_子集       11111
a88_合并两个有序数组 11
a93_复原IP地址      111？
z_买卖股票的最佳时机  1

a_最长递增子序列  1111111

a239_滑动窗口最大值 a239_MaxSlidingWindow       111111
a480_滑动窗口中位数 a480_MedianSlidingWindow    111111

a443_压缩算法 com.tian.algorithm.leedcode.a443_压缩算法    111111

# 数学的证明
n次方： 递归实现 com.tian.algorithm.classical.pow.pow    111111
n次方根：二分法实现 com.tian.algorithm.classical.pow.pow    111111
质子 com.tian.algorithm.classical.pow.质子
最小公倍数 com.tian.algorithm.classical.pow.最小公倍数




#==========================================================================================
公司面试

字节面试
    树的子结构
    子集变形（1<=x<=26）
    合并K个升序链表

拼多多
    权重


LRU com.tian.algorithm.base_op.cache.LRUCache
LFU com.tian.algorithm.base_op.cache.LFUCache


